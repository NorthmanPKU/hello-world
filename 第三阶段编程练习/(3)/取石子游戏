题目 - 取石子游戏	
描述
有两堆石子,两个人轮流去取.每次取的时候,只能从较多的那堆石子里取,并且取的数目必须是较少的那堆石子数目的整数倍.最后谁能够把一堆石子取空谁就算赢. 
比如初始的时候两堆石子的数目是25和7 



25 7	-->	11 7	-->	4 7	-->	4 3	-->	1 3	-->	1 0
 	选手1取	 	选手2取	 	选手1取	 	选手2取	 	选手1取

最后选手1（先取的）获胜，在取的过程中选手2都只有唯一的一种取法。 
给定初始时石子的数目，如果两个人都采取最优策略，请问先手能否获胜。
关于输入
输入包含多数数据。每组数据一行，包含两个正整数a和b，表示初始时石子的数目。 
输入以两个0表示结束。 
关于输出
如果先手胜，输出"win"，否则输出"lose"
例子输入
34 12

15 24

0 0
例子输出
win

lose
提示
假设石子数目为(a,b)且a>=b,如果[a/b]>=2则先手必胜,如果[a/b]<2,那么先手只有唯一的一种取法. 
[a/b]表示a除以b取整后的值.
#include<iostream>
#include<algorithm>
using namespace std;
int main()
{
	int x = 0, y = 0,t=0,p=0;
	char a[2][50] = { "win","lose" };
	while (cin >> t >> p) {
		if (t == 0) break;
		x = max(t, p);
		y = min(t, p);
		bool flag = 0;
		while (x%y != 0) {
			if (x / y >= 2) goto uu;
			if (x / y == 1) {
				int tem = y;
				y = x - y;
				x = tem;
			}
			else if (x%y <= y / 2) {
				x = x - y*(x / y - 1);
			}
			else if (x%y > y / 2) {
				int tem = y;
				y = x%y;
				x = tem;
			}
			flag = !flag;
			//cout << x << " " << y << endl;
		}
		uu:
		cout << a[flag]<<endl;
	}
	
    return 0;

}
