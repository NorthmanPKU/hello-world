#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;

#define MAX_LEN 1000

char a[MAX_LEN] = "\0";

int matched(int l, int r)
{
    int cnt = 1;
    for (int i = r - 1; i >= l; i--)
    {
        if (a[i] == ')')
            cnt++;
        else if (a[i] == '(')
            cnt--;
        if (cnt == 0){
//            cout<<i<<endl;
            return i;
        }
    }
    return 0;
}

int compute(int l, int r)
{
//    cout<<"正在计算"<<a[l]<<"与"<<a[r]<<"之间的算式"<<endl;
    for (int i = r; i >= l; i--)
    {
        if (a[i] == ')')
            i = matched(l, i);
        if (a[i] == '+')
            return compute(i + 1, r) + compute(l, i - 1);
        if (a[i] == '-')
            return compute(l, i - 1) - compute(i + 1, r);
    }
    for (int i = r; i >= l; i--)
    {
        if (a[i] == ')')
            i = matched(l, i);
        if (a[i] == '*')
            return compute(i + 1, r) * compute(l, i - 1);
        if (a[i] == '/')
            return compute(l, i - 1) / compute(i + 1, r);
    }
    if (a[r] == ')')
        return compute(l + 1, r - 1);
    if (a[r] >= '0' && a[r] <= '9')
    {
        int ans = 0, j = 0;
        for (int i = r; i >= l; i--, j++)
            ans += pow(10.0, (double)j) * (a[i] - '0');
        return ans;
    }
    return 0;
}

int main()
{
    while (cin.getline(a, MAX_LEN))
    {
        int x = strlen(a);
        cout << compute(0, x - 1) << endl;
    }
    return 0;
}
//
