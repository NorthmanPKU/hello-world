没考虑单词里有单引号问题，以及其他若干问题
描述
计算机信息管理免不了要涉及到文本处理的问题，而在众多处理方式中对一句（段）话中单词数的统计是非常基本也是十分重要的一个环节。
关于输入
一句话，由英文字母，数字及常用标点符号组成。
关于输出
统计句子中各单词出现的次数，并按单词在句子中第一次出现的顺序输出。 
输出包括若干行，每一行是一个单词，空格再跟着该单词在句子中出现的次数。
例子输入
A truly great book should be read in youth, again in maturity and once more in old age, as a fine building should be seen by morning light, at noon and by moonlight.
例子输出
A 1

truly 1

great 1

book 1

should 2

be 2

read 1

in 3

youth 1

again 1

maturity 1

and 2

once 1

more 1

old 1

age 1

as 1

a 1

fine 1

building 1

seen 1

by 2

morning 1

light 1

at 1

noon 1

moonlight 1
提示
注意一些细节比如单词之间不一定是用空格呀，用空格也不一定只有一个呀，还有整个句子前和最后的标点符号等，注意将这些_从一个整体考虑_，就可以编出比较完美的程序了。^_^ 

大家加油！
#include <iostream>
#include<algorithm>
#include<string>
using namespace std;
int main(){
    char a[1000][20];
    char wb[1000]={};
    int letterlong[1000]={0};
    cin.getline(wb,1000,'\n');
    int n=0,sum=0;
    //单词输入
    for(int i=0;wb[n]!='\0';i++){
        n=max(n, i);
        if((wb[n]>='a'&&wb[n]<='z')||(wb[n]>='A'&&wb[n]<='Z')||wb[n]=='\''){
            for(int j=0;((wb[n]>='a'&&wb[n]<='z')||(wb[n]>='A'&&wb[n]<='Z')||wb[n]=='\'');n++,j++){
                a[i][j]=wb[n];
                letterlong[i]++;
            }
            sum++;
        }
        else i--;
        n++;
    }
    int pd[sum],shuliang[sum];
    for(int i=0;i<sum;i++) {shuliang[i]=1;pd[i]=0;}
    bool xd=1;
    for(int i=0;i<sum;i++){
        for(int j=i+1;j<sum;j++){
            if(pd[i]==1) continue;
            if(letterlong[i]==letterlong[j]){
                for(int t=0;t<letterlong[i];t++){
                    if(a[i][t]!=a[j][t]){xd=0;break;}
                }
                if(xd==0){xd=1;}
                else {pd[j]=1;shuliang[i]++;}
            }
        }
    }
    for(int i=0;i<sum;i++){
            if(pd[i]==1) continue;
            else{
                for(int y=0;y<letterlong[i];y++){
                    cout<<a[i][y];
                }
                cout<<" "<<shuliang[i]<<endl;
            }
        
    }
    return 0;
}
