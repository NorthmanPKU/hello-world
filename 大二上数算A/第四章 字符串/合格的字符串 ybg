#include <iostream>
#include <string>
#include <cmath>
#include<algorithm>
using namespace std;

int equal(char a,char b){
	return a==b||(abs(a-b)==abs('A'-'a'));
}

int goodfind(string s,char a){
	if(a>='A'&&a<='Z'){
		return s.find(a)!=-1||s.find(a+32)!=-1;
	}
	else if(a>='a'&&a<='z'){
		return s.find(a)!=-1||s.find(a-32)!=-1;
	}
	else return s.find(a)!=-1;
}

int main(){
	
	int n=0;
	cin>>n;
	string ans[52];
	string pattern;
	int output[52]={0};
	int cnt=0;
	for(int i=0;i<n;i++) cin>>ans[i];
	cin>>pattern;
	int pl=pattern.length();

	for(int i=0;i<n;i++){
		bool available=1;
		int j=0;
		int l=ans[i].length();
		for(int k=0;k<l;k++){
			bool eqsign=0;
			if(pattern[j]=='['){
				int loc=pattern.find(']',j);
				string little_string=pattern.substr(j+1,loc-j-1);
				//cout<<little_string<<endl;
				if(goodfind(little_string, ans[i][k])) eqsign=1;
				j=loc;
			}
			else{
				if(equal(pattern[j], ans[i][k])) eqsign=1;
			}
			if(!eqsign){
				available=0;
				break;
			}
			j++;
		}
		
		if(available&&j==pl)
			output[cnt++]=i;
	}
	
	for(int i=0;i<cnt;i++){
		cout<<output[i]+1<<" "<<ans[output[i]]<<endl;
	}
	
	return 0;
}
